{"version":3,"sources":["Toggle.js","PreHome.js","Home.js","useDarkMode.js","globalStyles.js","App.js","index.js"],"names":["Sun","Moon","Title","Typography","PreHome","loop","Infinity","wrapper","steps","className","Header","Layout","Sider","Content","Search","Input","Home","state","collapsed","toggle","setState","useAuth0","user","isAuthenticated","useState","users","setUsers","searchUser","setSearchUser","loading","setLoading","pageNumber","setPageNumber","pagesVisited","displayUsers","slice","filter","val","name","toLowerCase","includes","company","map","kishi","phone","id","pageCount","Math","ceil","length","useEffect","axios","get","then","response","data","catch","error","console","log","trigger","collapsible","theme","mode","defaultSelectedKeys","Item","src","picture","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","placeholder","onChange","event","target","value","width","margin","minHeight","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Component","styled","svg","Toggle","toggleTheme","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","useDarkMode","setTheme","GlobalStyles","createGlobalStyle","body","text","lightTheme","darkTheme","Container","div","App","loginWithRedirect","logout","isLoading","themeMode","display","alignItems","justifyContent","exact","to","path","component","ReactDOM","render","domain","process","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.04b98dda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nlet Sun, Moon;\r\n\r\nSun = Moon = styled.svg`\r\n    margin-left: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n    return (\r\n        <div onClick={toggleTheme} >\r\n            {theme === 'light' ? <Moon xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#212121\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-moon\"><path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></Moon>\r\n                :\r\n                <Sun xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#fff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-sun\"><circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line></Sun>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Toggle;\r\n\r\n\r\n/* themes */\r\n\r\n// const GlobalStyles = createGlobalStyle`\r\n//     body {\r\n//         background-color: ${({theme}) => theme.body};\r\n//         color: ${({theme}) => theme.text};\r\n//     }\r\n// `;","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport Typical from 'react-typical';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst PreHome = () => {\r\n    return (\r\n        <>\r\n            <Title>\r\n                Welcome\r\n                <Typical\r\n                    loop={Infinity}\r\n                    wrapper=\"b\"\r\n                    steps={[\r\n                        ' Home',\r\n                        2000,\r\n                        ' Task Application',\r\n                        2000,\r\n                        ' React App',\r\n                        2000\r\n                    ]}\r\n                />\r\n            </Title>\r\n            <p className='paragraph'>By Logging in You can see users' information and, at the the same time, you have a profile. Dark and light mode, responsive design, pagination, etc. Have a look at :) <i>P.s: Recommended with your Google account</i> </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PreHome;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu, Input, Image } from 'antd';\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons';\r\nimport \"antd/dist/antd.css\";\r\nimport './App.css';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { IIFC } from \"react-iifc\";\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport PreHome from './PreHome';\r\n\r\n\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { Search } = Input;\r\n\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    collapsed: true,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <IIFC>\r\n        {() => {\r\n          const { user, isAuthenticated } = useAuth0();\r\n          const [users, setUsers] = useState([]);\r\n          const [searchUser, setSearchUser] = useState(\"\");\r\n          const [loading, setLoading] = useState(false);\r\n          const [pageNumber, setPageNumber] = useState(0);\r\n\r\n          const usersPerPage = 5;\r\n          const pagesVisited = pageNumber * usersPerPage;\r\n          const displayUsers = users.slice(pagesVisited, pagesVisited + usersPerPage).filter(val => {\r\n            if (searchUser === '') {\r\n              return val\r\n            } else if (\r\n              val.name.toLowerCase().includes(searchUser.toLowerCase()) ||\r\n              val.company.name.toLowerCase().includes(searchUser.toLowerCase())\r\n            ) {\r\n              return val;\r\n            }\r\n            return false\r\n          }).map(kishi => (\r\n            <tr key={kishi.id}>\r\n              <td>{kishi.name}</td>\r\n              <td>{kishi.phone}</td>\r\n              <td>{kishi.company.name}</td>\r\n            </tr>\r\n          ));\r\n\r\n          const pageCount = Math.ceil(users.length / usersPerPage);\r\n          const changePange = ({ selected }) => {\r\n            setPageNumber(selected)\r\n          }\r\n\r\n          useEffect(() => {\r\n            axios.get('https://jsonplaceholder.typicode.com/users')\r\n              .then(response => {\r\n                setUsers(response.data);\r\n                setLoading(false);\r\n              })\r\n              .catch(error => {\r\n                console.log(error);\r\n              })\r\n          }, [])\r\n\r\n          if (loading) {\r\n            return <h1>Loading...</h1>\r\n          }\r\n\r\n          if (!isAuthenticated) return <PreHome />\r\n\r\n          return (\r\n            <Layout>\r\n              <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                  <Menu.Item key=\"1\">\r\n                    <Image src={user.picture} />\r\n                    {user.name}\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </Sider>\r\n              <Layout className=\"site-layout\">\r\n                <Header className=\"site-layout-background header\" style={{ padding: 0 }}>\r\n                  {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                    className: 'trigger',\r\n                    onClick: this.toggle,\r\n                  })}\r\n                  <Search\r\n                    placeholder=\"Search...\"\r\n                    onChange={(event) => {\r\n                      setSearchUser(event.target.value)\r\n                    }}\r\n                    style={{ width: 200 }}\r\n                  />\r\n\r\n                </Header>\r\n                <Content\r\n                  className=\"site-layout-background\"\r\n                  style={{\r\n                    margin: '24px 16px',\r\n                    padding: 24,\r\n                    minHeight: 280,\r\n                  }}\r\n                >\r\n                  <table className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Name</th>\r\n                        <th>Contact</th>\r\n                        <th>Company</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{displayUsers}</tbody>\r\n                  </table>\r\n                  <ReactPaginate\r\n                    previousLabel={'<'}\r\n                    nextLabel={'>'}\r\n                    pageCount={pageCount}\r\n                    onPageChange={changePange}\r\n                    containerClassName={'paginationBtns'}\r\n                    previousLinkClassName={'previousBtn'}\r\n                    nextLinkClassName={'nextBtn'}\r\n                    disabledClassName={'pagination'}\r\n                    activeClassName={'paginationActive'}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          )\r\n        }}\r\n      </IIFC>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { useState } from 'react';\r\n\r\nconst useDarkMode = () => {\r\n    const [ theme, setTheme ] = useState('dark');\r\n\r\n    const toggleTheme = () => {\r\n        theme === 'dark' ? setTheme('light') : setTheme('dark');\r\n    }\r\n\r\n  return [theme, toggleTheme]\r\n}\r\n\r\nexport default useDarkMode;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    .header, body, .content, h1, input, button, main, .ant-layout, ul{\r\n        background : ${({theme}) => theme.body} !important;\r\n        color: ${({theme}) => theme.text} !important;\r\n        transition: 0.7s;\r\n    }\r\n\r\n    .ant-layout-sider {\r\n        background : ${({theme}) => theme.body} !important;\r\n        color: ${({theme}) => theme.text} !important;\r\n        transition: 0.7s;\r\n        border-right: 1px solid ${({theme}) => theme.text} !important;\r\n    }\r\n\r\n`;\r\n\r\nexport const lightTheme = {\r\n    body: \"#f3f5f0\",\r\n    text: \"#161b22\",\r\n}\r\n\r\nexport const darkTheme = {\r\n    text: \"#f3f5f0\",\r\n    body: \"#161b22\",\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport Home from './Home';\nimport \"antd/dist/antd.css\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport './App.css';\nimport Toggle from './Toggle';\nimport styled, { ThemeProvider } from 'styled-components';\nimport useDarkMode from \"./useDarkMode\";\nimport { GlobalStyles, lightTheme, darkTheme } from './globalStyles';\n\n\n\nconst Container = styled.div`\n        max-width: 100%;\n        margin: 0;\n        color: black;\n`;\n\n\n\nconst App = () => {\n  const { loginWithRedirect, isAuthenticated, logout, isLoading } = useAuth0();\n  const [theme, toggleTheme] = useDarkMode();\n\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n\n  if (isLoading) return <div className=\"loading\"><h1>Loading...</h1></div>\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <Container>\n        <div className=\"App\">\n          <BrowserRouter>\n            <div className=\"header\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <NavLink exact activeClassName=\"active\" to=\"/\" >Home</NavLink>\n                <GlobalStyles />\n                <Toggle theme={theme} toggleTheme={toggleTheme} />\n              </div>\n              {!isAuthenticated && (<NavLink activeClassName=\"active\" to=\"/login\" onClick={loginWithRedirect} className=\"login\">Login</NavLink>)}\n              {isAuthenticated && (<NavLink activeClassName=\"active\" to=\"/logout\" onClick={logout} className=\"logout\">Log Out</NavLink>)}\n            </div>\n            <div className=\"content\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n              </Switch>\n            </div>\n          </BrowserRouter>\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}